"""Initial revision

Revision ID: 95ad87ea3c09
Revises: 
Create Date: 2025-05-14 22:38:38.552161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '95ad87ea3c09'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('offer_tag_groups',
    sa.Column('TagGroupId', sa.UUID(), nullable=False),
    sa.Column('TagGroupName', sa.VARCHAR(length=60), nullable=False),
    sa.PrimaryKeyConstraint('TagGroupId')
    )
    op.create_table('payment_statuses',
    sa.Column('PaymentStatusId', sa.INTEGER(), nullable=False),
    sa.Column('PaymentStatusName', sa.VARCHAR(length=45), nullable=True),
    sa.PrimaryKeyConstraint('PaymentStatusId')
    )
    op.create_table('roles',
    sa.Column('RoleId', sa.UUID(), nullable=False),
    sa.Column('RoleName', sa.VARCHAR(length=50), nullable=False),
    sa.Column('RoleLevel', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('RoleId')
    )
    op.create_table('subscription_types',
    sa.Column('SubscriptionTypeId', sa.INTEGER(), nullable=False),
    sa.Column('Name', sa.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('SubscriptionTypeId')
    )
    op.create_table('offer_tags',
    sa.Column('TagId', sa.UUID(), nullable=False),
    sa.Column('TagName', sa.VARCHAR(length=60), nullable=False),
    sa.Column('TagGroup', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['TagGroup'], ['offer_tag_groups.TagGroupId'], ),
    sa.PrimaryKeyConstraint('TagId')
    )
    op.create_table('subscriptions',
    sa.Column('SubscriptionId', sa.UUID(), nullable=False),
    sa.Column('SubscriptionTypeId', sa.INTEGER(), nullable=False),
    sa.Column('Name', sa.VARCHAR(length=45), nullable=True),
    sa.Column('DateUntil', sa.DATE(), nullable=False),
    sa.Column('DateFrom', sa.DATE(), nullable=False),
    sa.ForeignKeyConstraint(['SubscriptionTypeId'], ['subscription_types.SubscriptionTypeId'], ),
    sa.PrimaryKeyConstraint('SubscriptionId')
    )
    op.create_table('users',
    sa.Column('UserId', sa.UUID(), nullable=False),
    sa.Column('PhoneNumber', sa.VARCHAR(length=11), nullable=True),
    sa.Column('TelegramId', sa.BIGINT(), nullable=False),
    sa.Column('IsVip', sa.BOOLEAN(), nullable=False),
    sa.Column('role', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role'], ['roles.RoleId'], ),
    sa.PrimaryKeyConstraint('UserId')
    )
    op.create_table('messages',
    sa.Column('MessageId', sa.UUID(), nullable=False),
    sa.Column('SenderId', sa.UUID(), nullable=False),
    sa.Column('ReceiverId', sa.UUID(), nullable=False),
    sa.Column('MessageText', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['ReceiverId'], ['users.UserId'], ),
    sa.ForeignKeyConstraint(['SenderId'], ['users.UserId'], ),
    sa.PrimaryKeyConstraint('MessageId')
    )
    op.create_table('offers',
    sa.Column('OfferId', sa.UUID(), nullable=False),
    sa.Column('Label', sa.VARCHAR(length=60), nullable=True),
    sa.Column('Description', sa.VARCHAR(length=400), nullable=True),
    sa.Column('PhotoPath', sa.VARCHAR(length=200), nullable=True),
    sa.Column('PublishDate', sa.DATE(), nullable=True),
    sa.Column('ExpireDate', sa.DATE(), nullable=True),
    sa.Column('HighPriority', sa.BOOLEAN(), nullable=False),
    sa.Column('OwnerId', sa.UUID(), nullable=False),
    sa.Column('Active', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['OwnerId'], ['users.UserId'], ),
    sa.PrimaryKeyConstraint('OfferId')
    )
    op.create_table('subscription_statuses',
    sa.Column('UserId', sa.UUID(), nullable=False),
    sa.Column('PaymentStatusId', sa.INTEGER(), nullable=False),
    sa.Column('SubscriptionId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['PaymentStatusId'], ['payment_statuses.PaymentStatusId'], ),
    sa.ForeignKeyConstraint(['SubscriptionId'], ['subscriptions.SubscriptionId'], ),
    sa.ForeignKeyConstraint(['UserId'], ['users.UserId'], ),
    sa.PrimaryKeyConstraint('UserId')
    )
    op.create_table('subscriptions_history',
    sa.Column('UserId', sa.UUID(), nullable=False),
    sa.Column('SubscriptionId', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['SubscriptionId'], ['subscriptions.SubscriptionId'], ),
    sa.ForeignKeyConstraint(['UserId'], ['users.UserId'], ),
    sa.PrimaryKeyConstraint('UserId')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions_history')
    op.drop_table('subscription_statuses')
    op.drop_table('offers')
    op.drop_table('messages')
    op.drop_table('users')
    op.drop_table('subscriptions')
    op.drop_table('offer_tags')
    op.drop_table('subscription_types')
    op.drop_table('roles')
    op.drop_table('payment_statuses')
    op.drop_table('offer_tag_groups')
    # ### end Alembic commands ###
